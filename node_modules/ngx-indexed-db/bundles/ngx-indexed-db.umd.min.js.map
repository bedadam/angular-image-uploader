{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-indexed-db/lib/ngx-indexed-db.ts","ng://ngx-indexed-db/utils/index.ts","ng://ngx-indexed-db/lib/ngx-indexed-db.meta.ts","ng://ngx-indexed-db/lib/ngx-indexed-db.service.ts","ng://ngx-indexed-db/lib/ngxindexeddb.module.ts"],"names":["__generator","thisArg","body","f","y","t","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","done","value","pop","length","push","e","step","indexedDB","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","openDatabase","dbName","version","upgradeCallback","Promise","resolve","reject","db","request","open","onsuccess","event","result","onerror","error","onupgradeneeded","console","log","DBMode","validateBeforeTransaction","storeName","objectStoreNames","contains","validateStoreName","createTransaction","options","trans","transaction","dbMode","oncomplete","complete","onabort","abort","optionsGenerator","type","CONFIG_TOKEN","InjectionToken","NgxIndexedDBService","dbConfig","name","Error","storeSchemas","migrationFactory","objectStoresMeta","database","forEach","storeSchema","store","objectStore_1","createObjectStore","storeConfig","schema","createIndex","keypath","storeMigrations","Object","keys","map","k","parseInt","filter","oldVersion","sort","a","b","close","target","prototype","add","key","_this","then","objectStore","evt","getByKey","get","getByID","id","getAll","_a","ResultAll","update","put","deleteRecord","delete","clear","deleteDatabase","_arguments","generator","deleteDBRequest","onblocked","P","fulfilled","rejected","apply","openCursor","cursorCallback","keyRange","openCursorByIndex","indexName","index","getByIndex","count","Injectable","Inject","args","NgxIndexedDBModule","forRoot","ngModule","providers","provide","useValue","NgModule","declarations","imports","CommonModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export interface ObjectStoreMeta {\n\tstore: string;\n\tstoreConfig: { keyPath: string; autoIncrement: boolean; [key: string]: any };\n\tstoreSchema: ObjectStoreSchema[];\n}\n\nexport interface ObjectStoreSchema {\n\tname: string;\n\tkeypath: string | string[];\n\toptions: { unique: boolean; [key: string]: any };\n}\nexport type Key = string | number | Date | ArrayBufferView | ArrayBuffer | IDBArrayKey | IDBKeyRange;\nexport interface IndexDetails {\n\tindexName: string;\n\torder: string;\n}\nexport interface RequestEventTarget<T> extends EventTarget {\n\tresult: T | T[];\n}\n\nexport interface RequestEvent<T> extends Event {\n\ttarget: RequestEventTarget<T>;\n}\n\nconst indexedDB: IDBFactory =\n\twindow.indexedDB || (<any>window).mozIndexedDB || (<any>window).webkitIndexedDB || (<any>window).msIndexedDB;\n\nexport function openDatabase(dbName: string, version: number, upgradeCallback?: Function) {\n\treturn new Promise<IDBDatabase>((resolve, reject) => {\n\t\tconst request = indexedDB.open(dbName, version);\n\t\tlet db: IDBDatabase;\n\t\trequest.onsuccess = (event: Event) => {\n\t\t\tdb = request.result;\n\t\t\tresolve(db);\n\t\t};\n\t\trequest.onerror = (event: Event) => {\n\t\t\treject(`IndexedDB error: ${request.error}`);\n\t\t};\n\t\tif (typeof upgradeCallback === 'function') {\n\t\t\trequest.onupgradeneeded = (event: Event) => {\n\t\t\t\tconsole.log('checkout');\n\t\t\t\tupgradeCallback(event, db);\n\t\t\t};\n\t\t}\n\t});\n}\n\nexport function CreateObjectStore(\n\tdbName: string,\n\tversion: number,\n\tstoreSchemas: ObjectStoreMeta[],\n\tmigrationFactory?: () => { [key: number]: (db: IDBDatabase, transaction: IDBTransaction) => void }\n) {\n\tconst request: IDBOpenDBRequest = indexedDB.open(dbName, version);\n\n\trequest.onupgradeneeded = function(event: IDBVersionChangeEvent) {\n\t\tconst database: IDBDatabase = (event.target as any).result;\n\n\t\tstoreSchemas.forEach((storeSchema: ObjectStoreMeta) => {\n\t\t\tif (!database.objectStoreNames.contains(storeSchema.store)) {\n\t\t\t\tconst objectStore = database.createObjectStore(storeSchema.store, storeSchema.storeConfig);\n\t\t\t\tstoreSchema.storeSchema.forEach((schema: ObjectStoreSchema) => {\n\t\t\t\t\tobjectStore.createIndex(schema.name, schema.keypath, schema.options);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tconst storeMigrations = migrationFactory && migrationFactory();\n\t\tif (storeMigrations) {\n\t\t\tObject.keys(storeMigrations)\n\t\t\t\t.map(k => parseInt(k, 10))\n\t\t\t\t.filter(v => v > event.oldVersion)\n\t\t\t\t.sort((a, b) => a - b)\n\t\t\t\t.forEach(v => {\n\t\t\t\t\tstoreMigrations[v](database, request.transaction);\n\t\t\t\t});\n\t\t}\n\n\t\tdatabase.close();\n\t};\n\n\trequest.onsuccess = function(e: any) {\n\t\te.target.result.close();\n\t};\n}\n\nexport enum DBMode {\n\treadonly = 'readonly',\n\treadwrite = 'readwrite'\n}\n","export interface Options {\n\tstoreName: string;\n\tdbMode: IDBTransactionMode;\n\terror: (e: Event) => any;\n\tcomplete: (e: Event) => any;\n\tabort?: any;\n}\n\nexport function validateStoreName(db: IDBDatabase, storeName: string) {\n\treturn db.objectStoreNames.contains(storeName);\n}\n\nexport function validateBeforeTransaction(db: IDBDatabase, storeName: string, reject: Function) {\n\tif (!db) {\n\t\treject('You need to use the openDatabase function to create a database before you query it!');\n\t}\n\tif (!validateStoreName(db, storeName)) {\n\t\treject(`objectStore does not exists: ${storeName}`);\n\t}\n}\n\nexport function createTransaction(db: IDBDatabase, options: Options): IDBTransaction {\n\tlet trans: IDBTransaction = db.transaction(options.storeName, options.dbMode);\n\ttrans.onerror = options.error;\n\ttrans.oncomplete = options.complete;\n\ttrans.onabort = options.abort;\n\treturn trans;\n}\n\nexport function optionsGenerator(type: any, storeName: any, reject: Function, resolve: Function): Options {\n\treturn {\n\t\tstoreName: storeName,\n\t\tdbMode: type,\n\t\terror: (e: Event) => {\n\t\t\treject(e);\n\t\t},\n\t\tcomplete: (e: Event) => {\n\t\t\tresolve();\n\t\t},\n\t\tabort: (e: Event) => {\n\t\t\treject(e);\n\t\t}\n\t};\n}\n","import { InjectionToken } from '@angular/core';\n\nexport interface DBConfig {\n\tname: string;\n\tversion: number;\n\tobjectStoresMeta: ObjectStoreMeta[];\n\tmigrationFactory?: () => { [key: number]: (db: IDBDatabase, transaction: IDBTransaction) => void };\n}\n\nexport interface ObjectStoreMeta {\n\tstore: string;\n\tstoreConfig: { keyPath: string; autoIncrement: boolean; [key: string]: any };\n\tstoreSchema: ObjectStoreSchema[];\n}\n\nexport interface ObjectStoreSchema {\n\tname: string;\n\tkeypath: string;\n\toptions: { unique: boolean; [key: string]: any };\n}\n\nexport const CONFIG_TOKEN = new InjectionToken<DBConfig>(null);\n","import { Injectable, Inject } from '@angular/core';\nimport { openDatabase, DBMode, Key, RequestEvent, CreateObjectStore } from './ngx-indexed-db';\nimport { createTransaction, optionsGenerator, validateBeforeTransaction } from '../utils';\nimport { CONFIG_TOKEN, DBConfig } from './ngx-indexed-db.meta';\n\n@Injectable()\nexport class NgxIndexedDBService {\n\tindexedDB =\n\t\twindow.indexedDB || (<any>window).mozIndexedDB || (<any>window).webkitIndexedDB || (<any>window).msIndexedDB;\n\n\tconstructor(@Inject(CONFIG_TOKEN) private dbConfig: DBConfig) {\n\t\tif (!dbConfig.name) {\n\t\t\tthrow new Error('NgxIndexedDB: Please, provide the dbName in the configuration');\n\t\t}\n\t\tif (!dbConfig.version) {\n\t\t\tthrow new Error('NgxIndexedDB: Please, provide the db version in the configuration');\n\t\t}\n\t\tCreateObjectStore(dbConfig.name, dbConfig.version, dbConfig.objectStoresMeta, dbConfig.migrationFactory);\n\t}\n\n\tadd<T>(storeName: string, value: T, key?: any) {\n\t\treturn new Promise<number>((resolve, reject) => {\n\t\t\topenDatabase(this.dbConfig.name, this.dbConfig.version).then((db: IDBDatabase) => {\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readwrite, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName);\n\n\t\t\t\tlet request: IDBRequest;\n\t\t\t\tif (key) {\n\t\t\t\t\trequest = objectStore.add(value, key);\n\t\t\t\t} else {\n\t\t\t\t\trequest = objectStore.add(value);\n\t\t\t\t}\n\n\t\t\t\trequest.onsuccess = (evt: any) => {\n\t\t\t\t\tkey = evt.target.result;\n\t\t\t\t\tresolve(key);\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n\n\tgetByKey<T>(storeName: string, key: any) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\topenDatabase(this.dbConfig.name, this.dbConfig.version).then((db: IDBDatabase) => {\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readonly, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName);\n\t\t\t\tlet request = objectStore.get(key);\n\t\t\t\trequest.onsuccess = function(event: Event) {\n\t\t\t\t\tresolve((<any>event.target).result);\n\t\t\t\t};\n\t\t\t\trequest.onerror = function(event: Event) {\n\t\t\t\t\treject(event);\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n\n\tgetByID<T>(storeName: string, id: string | number) {\n\t\treturn new Promise<T>((resolve, reject) => {\n\t\t\topenDatabase(this.dbConfig.name, this.dbConfig.version).then((db: IDBDatabase) => {\n\t\t\t\tvalidateBeforeTransaction(db, storeName, reject);\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readonly, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName),\n\t\t\t\t\trequest: IDBRequest;\n\t\t\t\trequest = objectStore.get(+id);\n\t\t\t\trequest.onsuccess = function(event: Event) {\n\t\t\t\t\tresolve((event.target as any).result as T);\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n\n\tgetAll<T>(storeName: string) {\n\t\treturn new Promise<T[]>((resolve, reject) => {\n\t\t\topenDatabase(this.dbConfig.name, this.dbConfig.version).then(db => {\n\t\t\t\tvalidateBeforeTransaction(db, storeName, reject);\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readonly, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName),\n\t\t\t\t\tresult: Array<any> = [];\n\n\t\t\t\tconst request: IDBRequest = objectStore.getAll();\n\n\t\t\t\trequest.onerror = function(e) {\n\t\t\t\t\treject(e);\n\t\t\t\t};\n\t\t\t\trequest.onsuccess = function({ target: { result: ResultAll } }: RequestEvent<T>) {\n\t\t\t\t\tresolve(ResultAll as T[]);\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n\n\tupdate<T>(storeName: string, value: T, key?: any) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\topenDatabase(this.dbConfig.name, this.dbConfig.version).then(db => {\n\t\t\t\tvalidateBeforeTransaction(db, storeName, reject);\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readwrite, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName);\n\t\t\t\ttransaction.oncomplete = event => {\n\t\t\t\t\tresolve(event);\n\t\t\t\t};\n\t\t\t\tif (key) {\n\t\t\t\t\tobjectStore.put(value, key);\n\t\t\t\t} else {\n\t\t\t\t\tobjectStore.put(value);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tdeleteRecord(storeName: string, key: Key) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\topenDatabase(this.dbConfig.name, this.dbConfig.version).then(db => {\n\t\t\t\tvalidateBeforeTransaction(db, storeName, reject);\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readwrite, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName);\n\t\t\t\tlet request = objectStore.delete(key);\n\t\t\t\trequest.onsuccess = event => {\n\t\t\t\t\tresolve(event);\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n\n\tclear(storeName: string) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\topenDatabase(this.dbConfig.name, this.dbConfig.version).then(db => {\n\t\t\t\tvalidateBeforeTransaction(db, storeName, reject);\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readwrite, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName);\n\t\t\t\tobjectStore.clear();\n\t\t\t\ttransaction.oncomplete = event => {\n\t\t\t\t\tresolve();\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n\n\tdelete(storeName: string, key: any) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\topenDatabase(this.dbConfig.name, this.dbConfig.version).then(db => {\n\t\t\t\tvalidateBeforeTransaction(db, storeName, reject);\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readwrite, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName);\n\t\t\t\tobjectStore['delete'](key);\n\t\t\t});\n\t\t});\n\t}\n\n\tdeleteDatabase() {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tconst db = await openDatabase(this.dbConfig.name, this.dbConfig.version);\n\t\t\tawait db.close();\n\t\t\tconst deleteDBRequest = this.indexedDB.deleteDatabase(this.dbConfig.name);\n\t\t\tdeleteDBRequest.onsuccess = resolve;\n\t\t\tdeleteDBRequest.onerror = reject;\n\t\t\tdeleteDBRequest.onblocked = () => {\n\t\t\t\tthrow new Error(\"Unable to delete database because it's blocked\");\n\t\t\t};\n\t\t});\n\t}\n\n\topenCursor(storeName: string, cursorCallback: (event: Event) => void, keyRange?: IDBKeyRange) {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\topenDatabase(this.dbConfig.name, this.dbConfig.version).then(db => {\n\t\t\t\tvalidateBeforeTransaction(db, storeName, reject);\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readonly, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName),\n\t\t\t\t\trequest = objectStore.openCursor(keyRange);\n\n\t\t\t\trequest.onsuccess = (event: Event) => {\n\t\t\t\t\tcursorCallback(event);\n\t\t\t\t\tresolve();\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Open a cursor by index filter.\n\t * @param storeName The name of the store to query.\n\t * @param indexName The index name to filter.\n\t * @param keyRange The range value and criteria to apply on the index.\n\t * @param cursorCallback A callback called when done.\n\t */\n\topenCursorByIndex(\n\t\tstoreName: string,\n\t\tindexName: string,\n\t\tkeyRange: IDBKeyRange,\n\t\tcursorCallback: (event: Event) => void\n\t) {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\topenDatabase(this.dbConfig.name, this.dbConfig.version).then(db => {\n\t\t\t\tvalidateBeforeTransaction(db, storeName, reject);\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readonly, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName),\n\t\t\t\t\tindex = objectStore.index(indexName),\n\t\t\t\t\trequest = index.openCursor(keyRange);\n\n\t\t\t\trequest.onsuccess = (event: Event) => {\n\t\t\t\t\tcursorCallback(event);\n\t\t\t\t\tresolve();\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n\n\tgetByIndex(storeName: string, indexName: string, key: any) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\topenDatabase(this.dbConfig.name, this.dbConfig.version).then(db => {\n\t\t\t\tvalidateBeforeTransaction(db, storeName, reject);\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readonly, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName),\n\t\t\t\t\tindex = objectStore.index(indexName),\n\t\t\t\t\trequest = index.get(key);\n\t\t\t\trequest.onsuccess = (event: Event) => {\n\t\t\t\t\tresolve((<IDBOpenDBRequest>event.target).result);\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n\n\tcount(storeName: string, keyRange?: IDBValidKey | IDBKeyRange) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\topenDatabase(this.dbConfig.name, this.dbConfig.version).then(db => {\n\t\t\t\tvalidateBeforeTransaction(db, storeName, reject);\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readonly, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName),\n\t\t\t\t\trequest: IDBRequest;\n\n\t\t\t\trequest = objectStore.count(keyRange);\n\t\t\t\trequest.onerror = e => reject(e);\n\t\t\t\trequest.onsuccess = e => resolve((<any>e.target).result);\n\t\t\t});\n\t\t});\n\t}\n}\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxIndexedDBService } from './ngx-indexed-db.service';\nimport { DBConfig, CONFIG_TOKEN } from './ngx-indexed-db.meta';\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule]\n})\nexport class NgxIndexedDBModule {\n\tstatic forRoot(dbConfig: DBConfig): ModuleWithProviders<NgxIndexedDBModule> {\n\t\treturn {\n\t\t\tngModule: NgxIndexedDBModule,\n\t\t\tproviders: [NgxIndexedDBService, { provide: CONFIG_TOKEN, useValue: dbConfig }]\n\t\t};\n\t}\n}\n"]}